---
- name: check mandatory variables
  ansible.builtin.assert:
    that:
      - mariadb_root_password is defined
    quiet: true

- name: ensure group
  ansible.builtin.group:
    name: mariadb
    gid: "{{ mariadb_gid }}"

- name: ensure user
  ansible.builtin.user:
    name: mariadb
    group: mariadb
    shell: /sbin/nologin
    uid: "{{ mariadb_uid }}"
    home: /var/lib/mariadb
    create_home: false

- name: ensure data directory
  ansible.builtin.file:
    state: directory
    path: /var/lib/mariadb
    owner: "{{ mariadb_uid }}"
    group: "{{ mariadb_uid }}"
    mode: 0750
  register: _data_directory

- name: ensure mariadb binaries wrappers
  ansible.builtin.copy:
    dest: "/usr/local/bin/{{ item }}"
    owner: root
    group: root
    mode: 0777
    content: |
      #!/usr/bin/env bash
      set -o noglob
      exec docker exec --tty --interactive --user root:root mariadb {{ item }} $@
  loop: "{{ _mariadb_binaries_wrappers }}"

- name: ensure pip modules
  ansible.builtin.pip:
    executable: pip3
    name: [pymysql]

- name: ensure systemd mariadb.service
  notify: restart service mariadb
  ansible.builtin.copy:
    dest: /etc/systemd/system/mariadb.service
    owner: root
    group: root
    mode: 0644
    content: |
      [Unit]
      Requires=docker.service
      After=docker.service
      StartLimitIntervalSec=0
      [Service]
      ExecStartPre=-/usr/bin/docker rm --force %N
      ExecStart=/usr/bin/docker run \
        --name=%N \
        --rm=true \
        --pid=host \
        --log-driver=none \
        --stop-timeout=300 \
        --user={{ mariadb_uid }}:{{ mariadb_gid }} \
        --network={{ mariadb_docker_network }} \
        {% if mariadb_docker_network != 'host' -%}
        {% for publish in mariadb_docker_publish_ports -%}
        --publish={{ publish }} \
        {% endfor -%}
        {% endif -%}
        --env=MARIADB_ALLOW_EMPTY_ROOT_PASSWORD="yes" \
        --volume=/etc/localtime:/etc/localtime:ro \
        --volume=/etc/timezone:/etc/timezone:ro \
        --volume=/var/lib/mariadb:/var/lib/mysql:rw \
        {{ mariadb_docker_image }}
      ExecStop=/usr/bin/docker stop %N
      Restart=always
      RestartSec=10
      KillMode=process
      [Install]
      WantedBy=multi-user.target

- name: execute handlers
  ansible.builtin.meta: flush_handlers

- name: start service mariadb
  ansible.builtin.systemd:
    name: mariadb
    daemon_reload: true
    enabled: true
    state: started

- name: wait mariadb
  ansible.builtin.wait_for:
    host: localhost
    port: 3306
    timeout: 60
  retries: 5

- name: configure
  include_tasks: configure.yml
